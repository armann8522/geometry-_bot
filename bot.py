import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

TOKEN = os.getenv("TOKEN")
if not TOKEN:
    TOKEN = "7506871066:AAEEKbt-HxEG_TpbwzkmKsylB8DKk1upVHk "

CHOOSING, TYPING = range(2)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["Ø¯Ø§ÛŒØ±Ù‡", "Ù…Ø±Ø¨Ø¹"], ["Ù…Ø«Ù„Ø«", "Ù…Ø³ØªØ·ÛŒÙ„"]]
    await update.message.reply_text(
        "Ø³Ù„Ø§Ù…! âœ…\nÛŒÚ© Ø´Ú©Ù„ Ø§Ù†ØªØ®Ø§Ø¨ Ú©Ù†:",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True),
    )
    return CHOOSING

async def handle_shape(update: Update, context: ContextTypes.DEFAULT_TYPE):
    shape = update.message.text
    context.user_data["shape"] = shape
    prompts = {
        "Ø¯Ø§ÛŒØ±Ù‡": "Ø´Ø¹Ø§Ø¹ Ø±Ø§ ÙˆØ§Ø±Ø¯ Ú©Ù†:",
        "Ù…Ø±Ø¨Ø¹": "Ø·ÙˆÙ„ Ø¶Ù„Ø¹ Ø±Ø§ ÙˆØ§Ø±Ø¯ Ú©Ù†:",
        "Ù…Ø«Ù„Ø«": "Ø³Ù‡ Ø¶Ù„Ø¹ (Ù…Ø«Ù„Ø§Ù‹: 3 4 5) Ø±Ø§ ÙˆØ§Ø±Ø¯ Ú©Ù†:",
        "Ù…Ø³ØªØ·ÛŒÙ„": "Ø·ÙˆÙ„ Ùˆ Ø¹Ø±Ø¶ (Ù…Ø«Ù„Ø§Ù‹: 4 5) Ø±Ø§ ÙˆØ§Ø±Ø¯ Ú©Ù†:",
    }
    await update.message.reply_text(prompts.get(shape, "Ø´Ú©Ù„ Ù†Ø§Ù…Ø¹ØªØ¨Ø±"), reply_markup=ReplyKeyboardRemove())
    return TYPING

async def calculate(update: Update, context: ContextTypes.DEFAULT_TYPE):
    shape = context.user_data.get("shape")
    text = update.message.text
    try:
        if shape == "Ø¯Ø§ÛŒØ±Ù‡":
            r = float(text); area = 3.14*r*r; per = 2*3.14*r
        elif shape == "Ù…Ø±Ø¨Ø¹":
            a = float(text); area = a*a; per = 4*a
        elif shape == "Ù…Ø«Ù„Ø«":
            a, b, c = map(float, text.split()); s=(a+b+c)/2
            area = (s*(s-a)*(s-b)*(s-c))**0.5; per = a+b+c
        elif shape == "Ù…Ø³ØªØ·ÛŒÙ„":
            a, b = map(float, text.split()); area = a*b; per = 2*(a+b)
        else:
            await update.message.reply_text("Ø§Ø´ØªØ¨Ø§Ù‡ Ø´Ú©Ù„ Ø§Ù†ØªØ®Ø§Ø¨ Ø´Ø¯.")
            return TYPING

        await update.message.reply_text(f"ðŸŽ¯ Ù†ØªÛŒØ¬Ù‡:\nÙ…Ø³Ø§Ø­Øª = {area:.2f}\nÙ…Ø­ÛŒØ· = {per:.2f}")
    except:
        await update.message.reply_text("ÙˆØ±ÙˆØ¯ÛŒ Ø§Ø´ØªØ¨Ø§Ù‡ Ø¨ÙˆØ¯ØŒ Ø¯ÙˆØ¨Ø§Ø±Ù‡ Ø³Ø¹ÛŒ Ú©Ù†.")

    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Ù„ØºÙˆ Ø´Ø¯.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

from telegram.ext import ConversationHandler

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    conv = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CHOOSING: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_shape)],
            TYPING: [MessageHandler(filters.TEXT & ~filters.COMMAND, calculate)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv)
    print("Ø±Ø¨Ø§Øª Ø±ÙˆØ´Ù† Ø´Ø¯ âœ…")
    app.run_polling()

if __name__ == "__main__":
    main()
